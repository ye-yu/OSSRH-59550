plugins {
    id "fabric-loom"
//    id "maven-publish"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.dokka" version "0.10.1"
}

apply plugin: "maven"
apply plugin: "signing"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
    maven { url = "http://maven.fabricmc.net/" }
    maven { url = "https://dl.bintray.com/kotlin/kotlin-eap" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    implementation group: "com.google.code.findbugs", name: "jsr305", version: "3.0.0"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task javadocJar(type: Jar) {
    getArchiveClassifier().set("javadoc")
    from dokka
}

//task sourcesJar(type: Jar) {
//    getArchiveClassifier().set("sources")
//    from sourceSets.main.allSource
//}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    //noinspection GrDeprecatedAPIUsage
    classifier = "sources"
//    getArchiveClassifier().set("sources")
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

jar {
    from "LICENSE"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.sonatypeUsername, password: project.sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.sonatypeUsername, password: project.sonatypePassword)
            }

            pom.project {
                name "Just Another MC Gui"
                packaging "jar"
                // optionally artifactId can be defined here
                description "A Fabric module for widget-based GUI for Minecraft"
                url "https://github.com/ye-yu/OSSRH-59550"

                scm {
                    connection "scm:git:ssh://git@github.com:ye-yu/OSSRH-59550.git"
                    developerConnection "scm:git:ssh://git@github.com:ye-yu/OSSRH-59550.git"
                    url "https://github.com/ye-yu/OSSRH-59550"
                }

                licenses {
                    license {
                        name "MIT"
                        url "https://github.com/ye-yu/OSSRH-59550/blob/master/LICENSE"
                    }
                }

                developers {
                    developer {
                        id "ye-yu"
                        name "Ye Yu"
                        email "rafolwen98@gmail.com"
                    }
                }
            }
        }
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"